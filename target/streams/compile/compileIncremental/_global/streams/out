[debug] [zinc] IncrementalCompile -----------
[debug] IncrementalCompile.incrementalCompile
[debug] previous = Stamps for: 21 products, 10 sources, 9 libraries
[debug] current source = Set(${BASE}/target/scala-2.13/routes/main/controllers/javascript/JavaScriptReverseRoutes.scala, ${BASE}/app/controllers/PersonController.scala, ${BASE}/target/scala-2.13/twirl/main/views/html/index.template.scala, ${BASE}/app/models/Person.scala, ${BASE}/target/scala-2.13/routes/main/controllers/routes.java, ${BASE}/target/scala-2.13/routes/main/router/Routes.scala, ${BASE}/target/scala-2.13/routes/main/controllers/ReverseRoutes.scala, ${BASE}/app/models/PersonRepository.scala, ${BASE}/app/repository/connection/DbComponent.scala, ${BASE}/target/scala-2.13/twirl/main/views/html/main.template.scala, ${BASE}/app/models/Environment.scala, ${BASE}/app/repository/connection/PostgresDBComponent.scala, ${BASE}/app/repository/dao/EnvironmentRepo.scala, ${BASE}/target/scala-2.13/routes/main/router/RoutesPrefix.scala)
[debug] > initialChanges = InitialChanges(Changes(added = Set(${BASE}/app/repository/dao/EnvironmentRepo.scala, ${BASE}/app/models/Environment.scala, ${BASE}/app/repository/connection/PostgresDBComponent.scala, ${BASE}/app/repository/connection/DbComponent.scala), removed = Set(), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set())
[debug] 
[debug] Initial source changes:
[debug] 	removed: Set()
[debug] 	added: Set(${BASE}/app/repository/dao/EnvironmentRepo.scala, ${BASE}/app/models/Environment.scala, ${BASE}/app/repository/connection/PostgresDBComponent.scala, ${BASE}/app/repository/connection/DbComponent.scala)
[debug] 	modified: Set()
[debug] Invalidated products: Set()
[debug] External API changes: API Changes: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated classes: Set()
[debug] Sources indirectly invalidated by:
[debug] 	product: Set()
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All initially invalidated classes: Set()
[debug] All initially invalidated sources:Set(${BASE}/app/repository/dao/EnvironmentRepo.scala, ${BASE}/app/models/Environment.scala, ${BASE}/app/repository/connection/PostgresDBComponent.scala, ${BASE}/app/repository/connection/DbComponent.scala)
[debug] Initial set of included nodes: 
[debug] compilation cycle 1
[info] compiling 4 Scala sources to C:\SangeetaGulia\projects\POC-projects\play-scala-slick-example-postgres\target\scala-2.13\classes ...
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.6.0:compile for Scala 2.13.8
[debug] [zinc] Running cached compiler 1cb39f7a for Scala compiler version 2.13.8
[debug] [zinc] The Scala compiler is invoked with:
[debug] 	-deprecation
[debug] 	-unchecked
[debug] 	-encoding
[debug] 	utf8
[debug] 	-feature
[debug] 	-deprecation
[debug] 	-Xfatal-warnings
[debug] 	-bootclasspath
[debug] 	C:\Program Files\OpenJDK\jdk-8.0.342.07-hotspot\jre\lib\resources.jar;C:\Program Files\OpenJDK\jdk-8.0.342.07-hotspot\jre\lib\rt.jar;C:\Program Files\OpenJDK\jdk-8.0.342.07-hotspot\jre\lib\sunrsasign.jar;C:\Program Files\OpenJDK\jdk-8.0.342.07-hotspot\jre\lib\jsse.jar;C:\Program Files\OpenJDK\jdk-8.0.342.07-hotspot\jre\lib\jce.jar;C:\Program Files\OpenJDK\jdk-8.0.342.07-hotspot\jre\lib\charsets.jar;C:\Program Files\OpenJDK\jdk-8.0.342.07-hotspot\jre\lib\jfr.jar;C:\Program Files\OpenJDK\jdk-8.0.342.07-hotspot\jre\classes;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\scala-lang\scala-library\2.13.8\scala-library-2.13.8.jar
[debug] 	-classpath
[debug] 	C:\SangeetaGulia\projects\POC-projects\play-scala-slick-example-postgres\target\scala-2.13\classes;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\twirl-api_2.13\1.5.1\twirl-api_2.13-1.5.1.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-server_2.13\2.8.8\play-server_2.13-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-logback_2.13\2.8.8\play-logback_2.13-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-akka-http-server_2.13\2.8.8\play-akka-http-server_2.13-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\filters-helpers_2.13\2.8.8\filters-helpers_2.13-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-guice_2.13\2.8.8\play-guice_2.13-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-slick_2.13\5.0.0\play-slick_2.13-5.0.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-slick-evolutions_2.13\5.0.0\play-slick-evolutions_2.13-5.0.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\postgresql\postgresql\42.4.2\postgresql-42.4.2.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\scala-lang\modules\scala-xml_2.13\1.2.0\scala-xml_2.13-1.2.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play_2.13\2.8.8\play_2.13-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\ch\qos\logback\logback-classic\1.2.3\logback-classic-1.2.3.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-streams_2.13\2.8.8\play-streams_2.13-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\akka\akka-http-core_2.13\10.1.14\akka-http-core_2.13-10.1.14.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\google\inject\guice\4.2.3\guice-4.2.3.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\google\inject\extensions\guice-assistedinject\4.2.3\guice-assistedinject-4.2.3.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\slick\slick_2.13\3.3.2\slick_2.13-3.3.2.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\slick\slick-hikaricp_2.13\3.3.2\slick-hikaricp_2.13-3.3.2.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-jdbc-api_2.13\2.8.0\play-jdbc-api_2.13-2.8.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-jdbc-evolutions_2.13\2.8.0\play-jdbc-evolutions_2.13-2.8.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\build-link\2.8.8\build-link-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\slf4j\jul-to-slf4j\1.7.30\jul-to-slf4j-1.7.30.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\slf4j\jcl-over-slf4j\1.7.30\jcl-over-slf4j-1.7.30.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\akka\akka-actor_2.13\2.6.14\akka-actor_2.13-2.6.14.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\akka\akka-actor-typed_2.13\2.6.14\akka-actor-typed_2.13-2.6.14.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\akka\akka-slf4j_2.13\2.6.14\akka-slf4j_2.13-2.6.14.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\akka\akka-serialization-jackson_2.13\2.6.14\akka-serialization-jackson_2.13-2.6.14.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\core\jackson-core\2.11.4\jackson-core-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\core\jackson-annotations\2.11.4\jackson-annotations-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.11.4\jackson-datatype-jdk8-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.11.4\jackson-datatype-jsr310-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\core\jackson-databind\2.11.4\jackson-databind-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-json_2.13\2.8.1\play-json_2.13-2.8.1.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\google\guava\guava\28.2-jre\guava-28.2-jre.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\io\jsonwebtoken\jjwt\0.9.1\jjwt-0.9.1.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\jakarta\transaction\jakarta.transaction-api\1.3.3\jakarta.transaction-api-1.3.3.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\scala-lang\modules\scala-java8-compat_2.13\0.9.1\scala-java8-compat_2.13-0.9.1.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\ssl-config-core_2.13\0.4.2\ssl-config-core_2.13-0.4.2.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\scala-lang\modules\scala-parser-combinators_2.13\1.1.2\scala-parser-combinators_2.13-1.1.2.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\ch\qos\logback\logback-core\1.2.3\logback-core-1.2.3.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\reactivestreams\reactive-streams\1.0.3\reactive-streams-1.0.3.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\akka\akka-stream_2.13\2.6.14\akka-stream_2.13-2.6.14.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\akka\akka-parsing_2.13\10.1.14\akka-parsing_2.13-10.1.14.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\config\1.4.0\config-1.4.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\scala-lang\modules\scala-collection-compat_2.13\2.0.0\scala-collection-compat_2.13-2.0.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\zaxxer\HikariCP\3.2.0\HikariCP-3.2.0.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-exceptions\2.8.8\play-exceptions-2.8.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\module\jackson-module-scala_2.13\2.11.4\jackson-module-scala_2.13-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\module\jackson-module-parameter-names\2.11.4\jackson-module-parameter-names-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\dataformat\jackson-dataformat-cbor\2.11.4\jackson-dataformat-cbor-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\lz4\lz4-java\1.7.1\lz4-java-1.7.1.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\play\play-functional_2.13\2.8.1\play-functional_2.13-2.8.1.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\org\scala-lang\scala-reflect\2.13.8\scala-reflect-2.13.8.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\google\guava\failureaccess\1.0.1\failureaccess-1.0.1.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\google\guava\listenablefuture\9999.0-empty-to-avoid-conflict-with-guava\listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\google\errorprone\error_prone_annotations\2.3.4\error_prone_annotations-2.3.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\google\j2objc\j2objc-annotations\1.3\j2objc-annotations-1.3.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\typesafe\akka\akka-protobuf-v3_2.13\2.6.14\akka-protobuf-v3_2.13-2.6.14.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\fasterxml\jackson\module\jackson-module-paranamer\2.11.4\jackson-module-paranamer-2.11.4.jar;C:\Users\sangeetg\AppData\Local\Coursier\Cache\v1\https\artifactory.dunnhumby.com\artifactory\libs-release\com\thoughtworks\paranamer\paranamer\2.8\paranamer-2.8.jar
[debug] Invalidating (transitively) by inheritance from repository.connection.PostgresDB...
[debug] Initial set of included nodes: repository.connection.PostgresDB
[debug] Invalidated by transitive inheritance dependency: Set(repository.connection.PostgresDB)
[debug] Change NamesChange(repository.connection.PostgresDB,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(PostgresDB,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(connectionPool,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]))) invalidates 1 classes due to The repository.connection.PostgresDB has the following regular definitions changed:
[debug] 	UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(PostgresDB,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(connectionPool,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]).
[debug]   > by transitive inheritance: Set(repository.connection.PostgresDB)
[debug]   > 
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from repository.dao.EnvironmentDAO.EnvironmentTable...
[debug] Initial set of included nodes: repository.dao.EnvironmentDAO.EnvironmentTable
[debug] Invalidated by transitive inheritance dependency: Set(repository.dao.EnvironmentDAO.EnvironmentTable)
[debug] Change NamesChange(repository.dao.EnvironmentDAO.EnvironmentTable,ModifiedNames(changes = UsedName(envt,[Default]), UsedName(eq,[Default]), UsedName(primaryKey,[Default]), UsedName(notifyAll,[Default]), UsedName(column,[Default]), UsedName(schemaName,[Default]), UsedName(EnvironmentTable,[Default]), UsedName(*,[Default]), UsedName(index,[Default]), UsedName(foreignKey,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(ne,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(TableElementType,[Default]), UsedName(tableTag,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(indexes,[Default]), UsedName(tableConstraints,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(tableNode,[Default]), UsedName(repository;dao;EnvironmentDAO;EnvironmentTable;init;,[Default]), UsedName(toNode,[Default]), UsedName($init$,[Default]), UsedName(create_*,[Default]), UsedName(wait,[Default]), UsedName(index$default$3,[Default]), UsedName(tableProvider,[Default]), UsedName(notify,[Default]), UsedName(foreignKeys,[Default]), UsedName(tableName,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(primaryKeys,[Default]), UsedName(pk,[Default]), UsedName(O,[Default]), UsedName(encodeRef,[Default]), UsedName(token,[Default]))) invalidates 1 classes due to The repository.dao.EnvironmentDAO.EnvironmentTable has the following regular definitions changed:
[debug] 	UsedName(envt,[Default]), UsedName(eq,[Default]), UsedName(primaryKey,[Default]), UsedName(notifyAll,[Default]), UsedName(column,[Default]), UsedName(schemaName,[Default]), UsedName(EnvironmentTable,[Default]), UsedName(*,[Default]), UsedName(index,[Default]), UsedName(foreignKey,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(ne,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(TableElementType,[Default]), UsedName(tableTag,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(indexes,[Default]), UsedName(tableConstraints,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(tableNode,[Default]), UsedName(repository;dao;EnvironmentDAO;EnvironmentTable;init;,[Default]), UsedName(toNode,[Default]), UsedName($init$,[Default]), UsedName(create_*,[Default]), UsedName(wait,[Default]), UsedName(index$default$3,[Default]), UsedName(tableProvider,[Default]), UsedName(notify,[Default]), UsedName(foreignKeys,[Default]), UsedName(tableName,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(primaryKeys,[Default]), UsedName(pk,[Default]), UsedName(O,[Default]), UsedName(encodeRef,[Default]), UsedName(token,[Default]).
[debug]   > by transitive inheritance: Set(repository.dao.EnvironmentDAO.EnvironmentTable)
[debug]   > 
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from repository.dao.EnvironmentDAO...
[debug] Initial set of included nodes: repository.dao.EnvironmentDAO
[debug] Including repository.dao.EnvironmentRepo by repository.dao.EnvironmentDAO
[debug] Invalidated by transitive inheritance dependency: Set(repository.dao.EnvironmentDAO, repository.dao.EnvironmentRepo)
[debug] Change NamesChange(repository.dao.EnvironmentDAO,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(EnvironmentTable,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(environmentTableQuery,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(EnvironmentDAO,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]))) invalidates 2 classes due to The repository.dao.EnvironmentDAO has the following regular definitions changed:
[debug] 	UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(EnvironmentTable,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(environmentTableQuery,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName(EnvironmentDAO,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]).
[debug]   > by transitive inheritance: Set(repository.dao.EnvironmentDAO, repository.dao.EnvironmentRepo)
[debug]   > 
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from repository.connection.PostgresDBComponent...
[debug] Initial set of included nodes: repository.connection.PostgresDBComponent
[debug] Including repository.dao.EnvironmentRepo by repository.connection.PostgresDBComponent
[debug] Invalidated by transitive inheritance dependency: Set(repository.dao.EnvironmentRepo, repository.connection.PostgresDBComponent)
[debug] The following modified names cause invalidation of repository.dao.EnvironmentRepo: [UsedName(db,[Default]), UsedName(PostgresDBComponent,[Default]), UsedName(driver,[Default])]
[debug] The following modified names cause invalidation of repository.dao.EnvironmentDAO: [UsedName(PostgresDBComponent,[Default]), UsedName(driver,[Default])]
[debug] Change NamesChange(repository.connection.PostgresDBComponent,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(PostgresDBComponent,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(driver,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(db,[Default]))) invalidates 3 classes due to The repository.connection.PostgresDBComponent has the following regular definitions changed:
[debug] 	UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(PostgresDBComponent,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(driver,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(db,[Default]).
[debug]   > by transitive inheritance: Set(repository.dao.EnvironmentRepo, repository.connection.PostgresDBComponent)
[debug]   > 
[debug]   > by member reference: Set(repository.dao.EnvironmentRepo, repository.dao.EnvironmentDAO)
[debug]         
[debug] Invalidating (transitively) by inheritance from repository.dao.EnvironmentRepo...
[debug] Initial set of included nodes: repository.dao.EnvironmentRepo
[debug] Invalidated by transitive inheritance dependency: Set(repository.dao.EnvironmentRepo)
[debug] Change NamesChange(repository.dao.EnvironmentRepo,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(EnvironmentTable,[Default]), UsedName(insertAll,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(environmentTableQuery,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(driver,[Default]), UsedName(getClass,[Default]), UsedName(createEnvironmentRepo,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(gettoken,[Default]), UsedName(EnvironmentRepo,[Default]), UsedName(insertenvironmentRecord,[Default]), UsedName(notify,[Default]), UsedName(getenvironmentDetails,[Default]), UsedName(db,[Default]))) invalidates 1 classes due to The repository.dao.EnvironmentRepo has the following regular definitions changed:
[debug] 	UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(EnvironmentTable,[Default]), UsedName(insertAll,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(environmentTableQuery,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(driver,[Default]), UsedName(getClass,[Default]), UsedName(createEnvironmentRepo,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(gettoken,[Default]), UsedName(EnvironmentRepo,[Default]), UsedName(insertenvironmentRecord,[Default]), UsedName(notify,[Default]), UsedName(getenvironmentDetails,[Default]), UsedName(db,[Default]).
[debug]   > by transitive inheritance: Set(repository.dao.EnvironmentRepo)
[debug]   > 
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from repository.connection.DbComponent...
[debug] Initial set of included nodes: repository.connection.DbComponent
[debug] Including repository.connection.PostgresDBComponent by repository.connection.DbComponent
[debug] Including repository.dao.EnvironmentRepo by repository.connection.PostgresDBComponent
[debug] Invalidated by transitive inheritance dependency: Set(repository.connection.DbComponent, repository.dao.EnvironmentRepo, repository.connection.PostgresDBComponent)
[debug] The following modified names cause invalidation of repository.dao.EnvironmentRepo: [UsedName(db,[Default]), UsedName(driver,[Default]), UsedName(DbComponent,[Default])]
[debug] The following modified names cause invalidation of repository.dao.EnvironmentDAO.EnvironmentTable: [UsedName(DbComponent,[Default]), UsedName(driver,[Default])]
[debug] The following modified names cause invalidation of repository.dao.EnvironmentDAO: [UsedName(DbComponent,[Default]), UsedName(driver,[Default])]
[debug] The following modified names cause invalidation of repository.connection.PostgresDBComponent: [UsedName(DbComponent,[Default]), UsedName(driver,[Default])]
[debug] The following modified names cause invalidation of repository.dao.EnvironmentRepo: [UsedName(db,[Default]), UsedName(driver,[Default]), UsedName(DbComponent,[Default])]
[debug] The following modified names cause invalidation of repository.dao.EnvironmentDAO: [UsedName(DbComponent,[Default]), UsedName(driver,[Default])]
[debug] Change NamesChange(repository.connection.DbComponent,ModifiedNames(changes = UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(DbComponent,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(driver,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(db,[Default]))) invalidates 5 classes due to The repository.connection.DbComponent has the following regular definitions changed:
[debug] 	UsedName(eq,[Default]), UsedName(notifyAll,[Default]), UsedName(DbComponent,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(hashCode,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(driver,[Default]), UsedName(getClass,[Default]), UsedName(wait,[Default]), UsedName(notify,[Default]), UsedName(db,[Default]).
[debug]   > by transitive inheritance: Set(repository.connection.DbComponent, repository.dao.EnvironmentRepo, repository.connection.PostgresDBComponent)
[debug]   > 
[debug]   > by member reference: Set(repository.dao.EnvironmentRepo, repository.dao.EnvironmentDAO.EnvironmentTable, repository.dao.EnvironmentDAO, repository.connection.PostgresDBComponent)
[debug]         
[debug] Invalidating (transitively) by inheritance from models.Environment...
[debug] Initial set of included nodes: models.Environment
[debug] Invalidated by transitive inheritance dependency: Set(models.Environment)
[debug] The following modified names cause invalidation of repository.dao.EnvironmentRepo: [UsedName(apply,[Default]), UsedName(token,[Default]), UsedName(Environment,[Default]), UsedName(envt,[Default])]
[debug] The following modified names cause invalidation of repository.dao.EnvironmentDAO.EnvironmentTable: [UsedName(apply,[Default]), UsedName(Environment,[Default]), UsedName(tupled,[Default]), UsedName(token,[Default]), UsedName(envt,[Default]), UsedName(unapply,[Default])]
[debug] The following modified names cause invalidation of repository.dao.EnvironmentDAO: [UsedName(apply,[Default]), UsedName(Environment,[Default])]
[debug] Change NamesChange(models.Environment,ModifiedNames(changes = UsedName(envt,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(notifyAll,[Default]), UsedName(curried,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(models;Environment;init;,[Default]), UsedName(hashCode,[Default]), UsedName(unapply,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(canEqual,[Default]), UsedName(Environment,[Default]), UsedName(copy,[Default]), UsedName(productElementNames,[Default]), UsedName(token,[Default]), UsedName(productIterator,[Default]))) invalidates 4 classes due to The models.Environment has the following regular definitions changed:
[debug] 	UsedName(envt,[Default]), UsedName(eq,[Default]), UsedName(productElementName,[Default]), UsedName(notifyAll,[Default]), UsedName(curried,[Default]), UsedName(productElement,[Default]), UsedName(copy$default$2,[Default]), UsedName(ne,[Default]), UsedName(!=,[Default]), UsedName(==,[Default]), UsedName(synchronized,[Default]), UsedName(models;Environment;init;,[Default]), UsedName(hashCode,[Default]), UsedName(unapply,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productPrefix,[Default]), UsedName(finalize,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(getClass,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(apply,[Default]), UsedName(copy$default$1,[Default]), UsedName(tupled,[Default]), UsedName(notify,[Default]), UsedName(canEqual,[Default]), UsedName(Environment,[Default]), UsedName(copy,[Default]), UsedName(productElementNames,[Default]), UsedName(token,[Default]), UsedName(productIterator,[Default]).
[debug]   > by transitive inheritance: Set(models.Environment)
[debug]   > 
[debug]   > by member reference: Set(repository.dao.EnvironmentRepo, repository.dao.EnvironmentDAO.EnvironmentTable, repository.dao.EnvironmentDAO)
[debug]         
[debug] New invalidations:
[debug] Initial set of included nodes: 
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] Final step, transitive dependencies:
[debug] 	Set()
[debug] No classes were invalidated.
[debug] Scala compilation took 4.3876035 s
[info] done compiling
